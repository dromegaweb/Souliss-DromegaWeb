/**************************************************************************
 * 
 * Progetto   :    Nodo06 Peer01 RS485 su Bridge02 (Nodo03) - Arduino Pro Mini
 * Autore     :    DromegaWeb
 * Data       :    27 Giugno 2015    -  Prima bozza 
 *                 05 Luglio 2015    -  Aggiunto RGB esito OK ma non su android 2.2
 * 
 ***************************************************************************/
  
  #define USARTDRIVER_INSKETCH
  #define USARTDRIVER	    Serial	//Dico al driver vNet di usare la seriale 0 dell'Arduino UNO
  #define USART_TXENABLE    1
  #define USART_TXENPIN	    3
  #define USART_DEBUG  	    0
  
  
  // Configure the framework
  #include "bconf/StandardArduino.h"			// Uso un Arduino standard
  #include "conf/usart.h"	                        // uso la seriale
  
  
  #include <SPI.h>
  #include <DHT.h>
  #include "Souliss.h"
  
// -------------INIZIO definizione della configurazione di rete --DromegaWeb------------------------------------

#define ip_Router		10
#define	ip_Gateway	11			// indirizzo ip Gateway Souliss   
#define ip_Eth_N2		12			// indirizzo ip su Ethernet Nodo02
#define	ip_Eth_N3		13			// indirizzo ip su Ethernet Nodo03

uint8_t ip_address_Gw[4]  = {192, 168, 2, ip_Gateway};		// indirizzo Gateway souliss su Ethernet Arduino Mega
uint8_t ip_address_E2[4]  = {192, 168, 2, ip_Eth_N2};		// indirizzo su Ethernet Nodo02
uint8_t ip_address_E3[4]  = {192, 168, 2, ip_Eth_N3};		// indirizzo su Ethernet Nodo03
uint8_t subnet_mask[4]    = {255, 255, 255, 0};
uint8_t ip_gateway_Router[4] = {192, 168, 2, ip_Router};	// indirizzo Gateway router

#define myvNet_address		ip_address_Gw[3]		// ultimo byte dell' IP address (11) è anche l'indirizzo vNet
#define	myvNet_subnet		0xFF00
#define myvNet_supern		0x0000
#define	myvNet_supern_E2	Nodo02_Bridge01_RS485
#define	myvNet_supern_E3	Nodo03_Bridge02_RS485

#define Nodo02_Bridge01_RS485		0xCE01	// Indirizzo Nodo02 bridge01 della Seriale RS485
#define Nodo04_Bridge01_Peer01			0xCE02	// Indirizzo Nodo04 peer01 su bridge01 remota Seriale RS485
#define Nodo05_Bridge01_Peer02			0xCE03	// Indirizzo Nodo05 peer02 su bridge01 remota Seriale RS485

#define Nodo03_Bridge02_RS485		0xCF01	// Indirizzo Nodo03 bridge02 della Seriale RS485
#define Nodo06_Bridge02_Peer01			0xCF02	// Indirizzo Nodo06 peer01 su bridge02 remota Seriale RS485
#define Nodo07_Bridge02_Peer02			0xCF03	// Indirizzo Nodo07 peer02 su bridge02 remota Seriale RS485
#define Nodo08_Bridge02_Peer03			0xCF04	// Indirizzo Nodo08 peer03 su bridge02 remota Seriale RS485

// -------------FINE definizione della configurazione di rete --DromegaWeb------------------------------------

#define DHTPIN 2             // pin per sensore DHT11    
#define DHTTYPE DHT22        // DHT 22 AM2302 tipo di DHT usato
#define TEMPERATURE     0
#define HUMIDITY        2
DHT dht(DHTPIN, DHTTYPE, 15);


void setup()
{
  Initialize();
  Souliss_SetAddress(Nodo07_Bridge02_Peer02, myvNet_subnet, Nodo03_Bridge02_RS485);
  dht.begin();

  
// Define inputs, outputs pins

  pinMode(2, INPUT);     // ingresso DHT 22 , sensore temp_um 

  Set_Temperature(TEMPERATURE);
  Set_Humidity(HUMIDITY);
  
}

void loop()
{
  EXECUTEFAST() {						
    UPDATEFAST();
    FAST_10ms() {
      
           // ProcessCommunication();   	
    }
    FAST_2110ms() {
           Logic_Temperature(TEMPERATURE);
           Logic_Humidity(HUMIDITY);
        }    
    FAST_PeerComms()
    
    START_PeerJoin();

  }

  EXECUTESLOW() {
    UPDATESLOW();

    SLOW_10s() {		// Gestiamo il timer con un tempo base di 10 secondi
        
          Souliss_ReadDHT(TEMPERATURE, HUMIDITY); 
    }
    SLOW_PeerJoin();        // riconnette se il Gateway viene riavviato
  }

}

void Souliss_ReadDHT(uint8_t TEMPERATURE_SLOT, uint8_t HUMIDITY_SLOT){
    // Legge la temperatura e l'umidutà da DHT ogni 10 secondi  
    float h = dht.readHumidity();     // Legge l'umidità
    float t = dht.readTemperature();  // Legge la temperatura in gradi Celsius

                
    ImportAnalog(TEMPERATURE_SLOT, &t);
    ImportAnalog(HUMIDITY_SLOT, &h); 
}




